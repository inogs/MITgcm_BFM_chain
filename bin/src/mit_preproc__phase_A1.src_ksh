#!/bin/ksh

# Load common profile
. @@(I:MIT_HOME)/bin/mit_profile.inc

# Rundate definition
mit_set_run

# start
mit_start
mit_prex "source $MIT_VENV_2/bin/activate"
PYTHONPATH=$PYTHONPATH:$MIT_BITSEA
#mit_prex "cd $MIT_BC_IC_FROM_OGSTM_DIR"
typeset -i exit_code=0

    DATESTART=$( date -d "${MIT_RUNDATE}  -  7  days " +%Y%m%d )   # <--- IC
    DATE__END=$( date -d "${MIT_RUNDATE}  +  3  days " +%Y%m%d-%H:%M:%S )   # all period



  DAILY_BGC_CLIM_DIR=$MIT_WRKDIR/BC_IC/BIO/AVE/DAILY_FROM_CLIM
  DAILY_BGC_PROD_DIR=$MIT_WRKDIR/BC_IC/BIO/AVE/DAILY_FROM_PROD
       DAILY_BGC_DIR=$MIT_WRKDIR/BC_IC/BIO/AVE/DAILY
              IC_DIR=$MIT_WRKDIR/BC_IC/IC/
         PHYS_BC_DIR=$MIT_WRKDIR/BC_IC/BC/PHYS
          CUT_BC_DIR=$MIT_WRKDIR/BC_IC/BC/CUTTED_SLICES
          BIO_BC_DIR=$MIT_WRKDIR/BC_IC/BC/BIO

      TIMELIST_START=$MIT_WRKDIR/t0.txt
         TIMES_DAILY=$MIT_WRKDIR/daily.txt

            MASKFILE=$MIT_WRKDIR/BC_IC/mask.nc              # to be generated
        MASK_006_014=$MIT_WRKDIR/BC_IC/meshmask_006_014.nc  # to be generated
         MASK_INPUTS=$MIT_WRKDIR/BC_IC/mask_006_014_reduced.nc
       PRODUCT_TABLE=$MIT_WRKDIR/BC_IC/product_table.txt
          MODEL_VARS=$MIT_WRKDIR/bfm_state_vars.txt
            ALL_VARS=$MIT_WRKDIR/all_vars.txt

           RIVERDATA=$MIT_BC_IC_FROM_OGSTM_DIR/static-data/masks/CADEAU/discharges_CADEAU_BFMv5_coastal.csv
       RIVERMETEODIR=$MIT_WRKDIR

export RIVERDATA RIVERMETEODIR

mit_mkdir "$CUT_BC_DIR"
mit_prex "python $MIT_BC_IC_FROM_OGSTM_DIR/riverdata_converter.py -i $RIVERMETEODIR/Po.dat > $RIVERMETEODIR/Po.txt "

echo ${MIT_OUTPUT_VARIABLES} | sed --regexp-extended -e 's/ +/ /g' | tr ' ' '\n' > ${MODEL_VARS}
echo ${MIT_OUTPUT_VARIABLES} U V T S  | sed --regexp-extended -e 's/ +/ /g' | tr ' ' '\n' > ${ALL_VARS}

for D in $(mit_days); do echo "$D-12:00:00" ; done > $TIMES_DAILY


#mkdir -p $DAILY_BGC_CLIM_DIR $DAILY_BGC_PROD_DIR $DAILY_BGC_DIR

for var in $MIT_OUTPUT_VARIABLES ; do
   mit_prex_or_die "mit_climatologies_linker $MIT_WRKDIR/MARINE_COPERNICUS/${var}.nc $DAILY_BGC_CLIM_DIR "
done


### Step 0.  GET MASK INFO  #####################################

BATHY=$MIT_WRKDIR/BC_IC/bathy.bin
mit_prex_or_die "gzip -dc $MIT_ETCDIR/static-data/ADRI_128/bathy.gz > $BATHY"
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/static-data/masks/CADEAU/maskgen.py -b $BATHY -o $MASKFILE"

mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/maskgen_006_014.py -i $MIT_WRKDIR/MARINE_COPERNICUS -o $MASK_006_014"

# getting OGSTM mask reduced on local
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/get_cut_Locations.py -c $MASK_006_014 -f $MASKFILE             > $MIT_WRKDIR/BC_IC/set_cut_indexes_006_014_vs_local.sh "
source $MIT_WRKDIR/BC_IC/set_cut_indexes_006_014_vs_local.sh
mit_prex_or_die "$MIT_BINDIR/ncks -F -d x,$((Index_W+1)),$((Index_E+1)) -d y,$((Index_S+1)),$((Index_N+1)) -d z,1,$Index_B $MASK_006_014 -O $MASK_INPUTS"



##################################################################

### Step 1.  FROM PRODUCTS TO AVE CUTTED #########################

JSON=${MIT_BC_IC_FROM_OGSTM_DIR}/cmems_product.json
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/products_converter.py -i $MIT_WRKDIR/MARINE_COPERNICUS/ -d $MIT_RUNDATE -o $DAILY_BGC_PROD_DIR -m $MASK_INPUTS -c $JSON"

# gathering all ave files in AVE_DAILY_DIR
cd $DAILY_BGC_DIR
for I in `ls ${DAILY_BGC_CLIM_DIR}/*nc `; do ln -fs $I ; done
for I in `ls ${DAILY_BGC_PROD_DIR}/*nc `; do ln -fs $I ; done


##################################################################



### Step 2. INITIAL CONDITIONS ###################################

echo "${DATESTART}-12:00:00" > $TIMELIST_START
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/IC_files_gen.py -m $MASKFILE --nativemask $MASK_INPUTS -i $DAILY_BGC_DIR -o $IC_DIR  -t $TIMELIST_START -v $ALL_VARS"

##################################################################


### Step 4. BOUNDARY CONDITIONS ##################################

Open_Boundaries="S"      # South Boundary

for side in E W S N ; do

   if echo $Open_Boundaries | grep -q $side ; then    # if side in Open_Boundaries

      mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/ogstm_cutter.py -i $DAILY_BGC_DIR --datatype ave --side ${side} -o ${CUT_BC_DIR}/${side} -v $ALL_VARS -t $TIMES_DAILY -m $MASKFILE -M $MASK_INPUTS"
      mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen_PHYS.py -t $TIMES_DAILY -m $MASKFILE --nativemask $MASK_INPUTS -s ${side} -i $CUT_BC_DIR/${side} -o $PHYS_BC_DIR"
      mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen.py      -t $TIMES_DAILY -m $MASKFILE --nativemask $MASK_INPUTS -s ${side} -i $CUT_BC_DIR/${side} -o $BIO_BC_DIR  -v $MODEL_VARS"
   else
      mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen_PHYS.py -t $TIMES_DAILY -m $MASKFILE -s ${side} -o $PHYS_BC_DIR"
      mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen.py      -t $TIMES_DAILY -m $MASKFILE -s ${side} -o $BIO_BC_DIR -v $MODEL_VARS "
   fi
done

mit_exit "$exit_code"


