#!/bin/ksh

# Load common profile
. @@(I:MIT_HOME)/bin/mit_profile.inc

# Rundate definition
mit_set_run

# start
mit_start
mit_prex "source $MIT_VENV_1/bin/activate"
mit_prex "cd $MIT_BC_IC_FROM_OGSTM"

OPA_RUNDATE=$( date -d "last tuesday" +%Y%m%d )
  DATESTART=$( date -d "${MIT_RUNDATE}  -  7  days " +%Y%m%d-%H:%M:%S )   # <--- IC
  DATE__END=$( date -d "${MIT_RUNDATE}  +  3  days " +%Y%m%d-%H:%M:%S )   # all period
     DATE_W=$( date -d "${OPA_RUNDATE} - 4 days +  12  hours " +%Y%m%d-%H:%M:%S )



COPERNICUS_ARCHIVE_DIR=$HOME/OPA/V4C/archive

      ARCHIVE_AVE_D=$COPERNICUS_ARCHIVE_DIR/$OPA_RUNDATE/POSTPROC/AVE_FREQ_1/ARCHIVE
      ARCHIVE_AVE_W=$COPERNICUS_ARCHIVE_DIR/$OPA_RUNDATE/POSTPROC/AVE_FREQ_2
AVE_DAILY_DIR=$MIT_WRKDIR/BC_IC/BIO/UNZIPPED/AVE/DAILY
AVE_WEEKLY_DIR=$MIT_WRKDIR/BC_IC/BIO/UNZIPPED/AVE/WEEKLY

MASK128=$MIT_WRKDIR/BC_IC/mask128.nc # Cadeau Mask, generated
MASK_OGSTM_RED=$MIT_WRKDIR/mask_ogstm_reduced.nc

MPI="mpirun -np 36 "
# 1.2 Parallel uncompressing
for var in N1p N3n N4n N5s O2o P1 P2 P3 P4; do  
   mit_prex_or_die " $MPI python uncompress.py -i $ARCHIVE_AVE_D    -o $AVE_DAILY_DIR  -l ave*${var}*.nc.gz "
done
mit_prex_or_die " $MPI python uncompress.py -i $ARCHIVE_AVE_W  -o $AVE_WEEKLY_DIR -l *gz "


for var in $OPA_LOW__FREQ_VARIABLES ; do 
   mit_prex_or_die "ln -fs $AVE_WEEKLY_DIR/ave.${DATE_W}.${var}.nc $AVE_WEEKLY_DIR/ave.${DATESTART}.${var}.nc "
   mit_prex_or_die "ln -fs $AVE_WEEKLY_DIR/ave.${DATE_W}.${var}.nc $AVE_WEEKLY_DIR/ave.${DATE__END}.${var}.nc "
done

for var in $OPA_HIGH_FREQ_VARIABLES ; do
    mit_prex_or_die "ln -fs $AVE_DAILY_DIR/ave.${DATESTART:0:8}-12:00:00.${var}.nc ${AVE_DAILY_DIR}/ave.${DATESTART}.${var}.nc " 
done

####### link phys  ###########################
for I in `ls $COPERNICUS_ARCHIVE_DIR/${OPA_RUNDATE}/OPAOPER_A/*  $COPERNICUS_ARCHIVE_DIR/${OPA_RUNDATE}/OPAOPER_F/* ` ; do
    F=`basename $I`
    filename=${F:18:8}_${F:29:4}
    filename=20${F}
    mit_prex_or_die "ln -fs $I $PHYS_DIR/$filename"
done
##################################################################


BATHY=$MIT_WRKDIR/BC_IC/bathy
mit_prex_or_die "gzip -dc $MIT_ETCDIR/static-data/ADRI_128/bathy.gz > $BATHY"
mit_prex_or_die "python maskgen.py -b $BATHY -o $MASK128"

MASK__PHYS="$HOME/OPA/V4C/etc/static-data/MED24_141/meshmask.nc"
MASK_OGSTM="$HOME/OPA/V4C/etc/static-data/MED24_125/meshmask.nc"

mit_prex_or_die " python get_cut_Locations.py -c $MASK__PHYS -f $MASK_128 > $RUNDIR/set_cut_indexes_INGV_vs_M128.sh "
mit_prex_or_die " python get_cut_Locations.py -c $MASK_OGSTM -f $MASK_128 > $RUNDIR/set_cut_indexes_V4_vs_M128.sh "

mit_prex_or_die "chmod 744 $RUNDIR/set_cut_indexes_INGV_vs_M128.sh $RUNDIR/set_cut_indexes_V4_vs_M128.sh"

# getting Mask16 reduced on CADEAU 
medmit_prex_or_die ". nco_indexer.sh $RUNDIR/set_cut_indexes_V4_vs_M128.sh"
medmit_prex_or_die " $MIT_BINDIR/ncks -F -a -d x,$Index_W,$Index_E -d y,$Index_S,$Index_N $MASK_OGSTM -O $MASK_OGSTM_RED"
##################################################################

typeset -i errors=0
mit_exit "$exit_code"


# Get name of ECMWF wind input files
mit_set_input_files__mitoper_a
mit_set_input_files__mitoper_f

typeset -i errors=0

### set up of input files in $OPA_WRKDIR/OPAOPER

$OPA_SCRDIR/mit_input_stagein.ksh || errors=$(( $errors + 1 ))

# ### create links for analyses
# $OPA_SCRDIR/mit_link_analyses.ksh || errors=$(( $errors + 1 ))

# ### create links for analyses
# $OPA_SCRDIR/mit_link_forecast.ksh || errors=$(( $errors + 1 ))


if [[ $errors -gt 0 ]] ; then
  mit_log 0 "WRN: $errors errors during phase A1"
fi

echo "DBG: LD_LIBRARY_PATH=$LD_LIBRARY_PATH"

### check input files:
typeset -i exit_code=0
$OPA_SCRDIR/mit_check_input_files.ksh || exit_code=$?

mit_exit "$exit_code"
