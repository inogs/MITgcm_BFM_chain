#!/bin/ksh

# Load common profile
. @@(I:MIT_HOME)/bin/mit_profile.inc

# Rundate definition
mit_set_run

# start
mit_start
mit_prex "source $MIT_VENV_1/bin/activate"
export PYTHONPATH=$PYTHONPATH:$MIT_BITSEA
#mit_prex "cd $MIT_BC_IC_FROM_OGSTM_DIR"
typeset -i exit_code=0

    DATESTART=$( date -d "${MIT_RUNDATE}  -  7  days " +%Y%m%d )   # <--- IC
    DATE__END=$( date -d "${MIT_RUNDATE}  +  3  days " +%Y%m%d-%H:%M:%S )   # all period



  DAILY_BGC_CLIM_DIR=$MIT_WRKDIR/BC_IC/BIO/AVE/DAILY_FROM_CLIM
  DAILY_BGC_PROD_DIR=$MIT_WRKDIR/BC_IC/BIO/AVE/DAILY_FROM_PROD
       DAILY_BGC_DIR=$MIT_WRKDIR/BC_IC/BIO/AVE/DAILY
      DAILY_PHYS_DIR=$MIT_WRKDIR/BC_IC/PHYS/
          PHYSIC_DIR=$MIT_WRKDIR/BC_IC/IC/PHYS
          BIO_IC_DIR=$MIT_WRKDIR/BC_IC/IC/BIO
      PHYSCUT_BC_DIR=${MIT_WRKDIR}/PHYS/CUTTED_SLICES
         PHYS_BC_DIR=${MIT_WRKDIR}/BC/PHYS
       BIOCUT_BC_DIR=${MIT_WRKDIR}/BIO/CUTTED_SLICES
          BIO_BC_DIR=${MIT_WRKDIR}/BC/BIO

      TIMELIST_START=$MIT_WRKDIR/t0.txt
         TIMES_DAILY=$MIT_WRKDIR/daily.txt

            MASKFILE=$MIT_WRKDIR/BC_IC/mask.nc              # to be generated
        MASK_006_014=$MIT_WRKDIR/BC_IC/meshmask_006_014.nc  # to be generated
    MASK_006_014_RED=$MIT_WRKDIR/BC_IC/mask_006_014_reduced.nc
       PRODUCT_TABLE=$MIT_WRKDIR/BC_IC/product_table.txt
          MODEL_VARS=$MIT_WRKDIR/bfm_state_vars.txt

           RIVERDATA=$MIT_BC_IC_FROM_OGSTM_DIR/static-data/masks/CADEAU/discharges_CADEAU_N2.xlsx
       RIVERMETEODIR=$MIT_WRKDIR

export RIVERDATA RIVERMETEODIR

echo ${MIT_OUTPUT_VARIABLES} | sed --regexp-extended -e 's/ +/ /g' | tr ' ' '\n' > ${MODEL_VARS};

for D in $(mit_days); do echo "$D-12:00:00" ; done > $TIMES_DAILY


mkdir -p $DAILY_BGC_CLIM_DIR $DAILY_BGC_PROD_DIR $DAILY_BGC_DIR

for var in $MIT_OUTPUT_VARIABLES ; do
   mit_prex_or_die "mit_climatologies_linker $MIT_WRKDIR/MARINE_COPERNICUS/${var}.nc $DAILY_BGC_CLIM_DIR "
done


### Step 0.  GET MASK INFO  #####################################

BATHY=$MIT_WRKDIR/BC_IC/bathy.bin
mit_prex_or_die "gzip -dc $MIT_ETCDIR/static-data/ADRI_128/bathy.gz > $BATHY"
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/static-data/masks/CADEAU/maskgen.py -b $BATHY -o $MASKFILE"

mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/maskgen_006_014.py -i $MIT_WRKDIR/MARINE_COPERNICUS -o $MASK_006_014"
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/get_cut_Locations.py -c $MASK_006_014 -f $MASKFILE             > $MIT_WRKDIR/BC_IC/set_cut_indexes_006_014_vs_local.sh "

source $MIT_WRKDIR/BC_IC/set_cut_indexes_006_014_vs_local.sh
# getting OGSTM mask reduced on local
mit_prex_or_die "$MIT_BINDIR/ncks -F -d x,$((Index_W+1)),$((Index_E+1)) -d y,$((Index_S+1)),$((Index_N+1)) -d z,1,$Index_B $MASK_006_014 -O $MASK_006_014_RED"

mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/get_cut_Locations.py -c $MASK_006_014_RED -f $MASK_006_014_RED > $MIT_WRKDIR/BC_IC/set_cut_indexes_local_itself.sh "


##################################################################

### Step 1.  FROM PRODUCTS TO AVE CUTTED #########################

JSON=${MIT_ETCDIR}/motu-config/motu_downloader.json
jq '.services[].products[] | .name as $name | .variables[] | $name + " " + .' $JSON | cut -d "\"" -f 2 > $PRODUCT_TABLE

grep cmcc $PRODUCT_TABLE | while read dataset var ; do
   INPUTFILE=$MIT_WRKDIR/MARINE_COPERNICUS/${dataset}-$MIT_RUNDATE.nc
   mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/products_converter.py -v $var -i $INPUTFILE -o $DAILY_PHYS_DIR -m $MASK_006_014_RED"
done


grep ogs $PRODUCT_TABLE | while read dataset var ; do
   INPUTFILE=$MIT_WRKDIR/MARINE_COPERNICUS/${dataset}-$MIT_RUNDATE.nc
   mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/products_converter.py -v $var -i $INPUTFILE -o $DAILY_BGC_PROD_DIR -m $MASK_006_014_RED"
done

# gathering all ave files in AVE_DAILY_DIR
cd $DAILY_BGC_DIR
for I in `ls ${DAILY_BGC_CLIM_DIR}/*nc `; do ln -fs $I ; done
for I in `ls ${DAILY_BGC_PROD_DIR}/*nc `; do ln -fs $I ; done


##################################################################



### Step 2. INITIAL CONDITIONS ###################################

echo "${DATESTART}-12:00:00" > $TIMELIST_START

#phys
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/IC_files_gen.py -m $MASKFILE --nativemask $MASK_006_014_RED  -i $DAILY_PHYS_DIR -o $PHYSIC_DIR -t $TIMELIST_START "
## bio ##
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/IC_files_gen.py -m $MASKFILE --nativemask $MASK_006_014_RED -i $DAILY_BGC_DIR -o $BIO_IC_DIR  -t $TIMELIST_START -v $MODEL_VARS"

##################################################################


### Step 4. BOUNDARY CONDITIONS ##################################

## phys ##
source $MIT_WRKDIR/BC_IC/set_cut_indexes_local_itself.sh
mit_prex_or_die "$MIT_BC_IC_FROM_OGSTM_DIR/cutter.sh -i $DAILY_PHYS_DIR -o $PHYSCUT_BC_DIR/SOUTH  -c '${MIT_BINDIR}/ncks -F -d longitude,$((Index_W+1)),$((Index_E+1)) -d latitude,$((Index_S+1)),$((Index_S+1)) ' "

mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen_PHYS.py -t $TIMES_DAILY -m $MASKFILE -s E -o $PHYS_BC_DIR"
mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen_PHYS.py -t $TIMES_DAILY -m $MASKFILE -s N -o $PHYS_BC_DIR"
mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen_PHYS.py -t $TIMES_DAILY -m $MASKFILE -s W -o $PHYS_BC_DIR"
mit_prex_or_die " python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen_PHYS.py -t $TIMES_DAILY -m $MASKFILE --nativemask $MASK_006_014_RED -s S -i $PHYSCUT_BC_DIR/SOUTH  -o $PHYS_BC_DIR"

## bio ##

# South Boundary
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/ogstm_cutter.py  --loncut $Index_W,$Index_E --latcut $Index_S,$Index_S -i $DAILY_BGC_DIR --datatype ave -o ${BIOCUT_BC_DIR}/SOUTH -v $MODEL_VARS -t $TIMES_DAILY -m $MASK_006_014_RED"

mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen.py -t $TIMES_DAILY -v $MODEL_VARS -m $MASKFILE -s N -o $BIO_BC_DIR"
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen.py -t $TIMES_DAILY -v $MODEL_VARS -m $MASKFILE -s E -o $BIO_BC_DIR"
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen.py -t $TIMES_DAILY -v $MODEL_VARS -m $MASKFILE -s W -o $BIO_BC_DIR"
mit_prex_or_die "python $MIT_BC_IC_FROM_OGSTM_DIR/BC_files_gen.py -t $TIMES_DAILY -v $MODEL_VARS -m $MASKFILE --nativemask $MASK_006_014_RED -s S -o $BIO_BC_DIR  -i ${BIOCUT_BC_DIR}/SOUTH"

mit_exit "$exit_code"


