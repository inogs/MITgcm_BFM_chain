#!/bin/ksh

# 

# Load common profile
. @@(I:MIT_HOME)/bin/mit_profile.inc
# Rundate definition
mit_set_run

# start
mit_start


typeset -i _errors=0
mit_prex "source $MIT_VENV_1/bin/activate"
export PYTHONPATH=$PYTHONPATH:$MIT_BITSEA

DATE__END=$( date -d "${MIT_RUNDATE}  + 36 hours " +%Y%m%d-%H:%M:%S )
DOWNSTART=$( date -d "${MIT_RUNDATE}  -  8  days " +%Y%m%d-%H:%M:%S )
DOWN__END=$( date -d "${MIT_RUNDATE}             " +%Y%m%d-%H:%M:%S )

LOCALDIR=$MIT_WRKDIR/METEO/DOWNLOAD
METEODIR=$MIT_WRKDIR/METEO

DOWNTIMELISTFILE=$METEODIR/to_download_timelist.txt

mit_prex "cd $MIT_BC_IC_FROM_OGSTM_DIR "

# download Arso files
mit_prex_or_die " python TimeList_generator.py -s $DOWNSTART -e $DOWN__END --days 1 --dateformat %Y%m%d  > $DOWNTIMELISTFILE "
mit_prex "cd $LOCALDIR "

for YYYYMMDD in `cat $DOWNTIMELISTFILE`; do
  FILENAME=asogsasc_${YYYYMMDD}00.tar.gz
  mit_prex_or_die "wget --no-check-certificate https://dsecho.inogs.it/datastore/northern_Adriatic_benchmark/meteo/ALADIN_SI/$FILENAME"
done

# download Copernicus static data
CONFIG_FILE=$MIT_ETCDIR/nc-config/.cmems.ncconfig
COPERNICUSDIR=${MIT_WRKDIR}/MARINE_COPERNICUS
REMOTEDIR=/Core/MEDSEA_ANALYSISFORECAST_BGC_006_014/MEDSEA_ANALYSISFORECAST_BGC_006_014-statics/
for filename in MED_MFC_006_014_coordinates.nc MED_MFC_006_014_mask_bathy.nc; do
   mit_prex_or_die "$MIT_BINDIR/ncftpget -f $CONFIG_FILE $COPERNICUSDIR ${REMOTEDIR}/${filename}"
done

# download Copernicus data
COPERNICUSDIR=${MIT_WRKDIR}/MARINE_COPERNICUS
mit_prex_or_die "@@(I:MIT_HOME)/bin/mit_cmems_downloader.ksh -d ${MIT_RUNDATE} -c ${MIT_ETCDIR}/motu-config/motu_downloader.json -o ${COPERNICUSDIR} -m ${MIT_BINDIR}/motuclient-python"

# download dsecho data
mit_prex_or_die "@@(I:MIT_HOME)/bin/mit_clim_downloader.ksh  -c ${MIT_ETCDIR}/motu-config/motu_downloader.json -o ${COPERNICUSDIR}"


mit_exit "$errors"
